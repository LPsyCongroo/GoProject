Objects and Methods:

    Game.Properties
        black: Player
        white: Player
        currentTurn: black
        board: Board
    Game.Methods
        initialize  //Create a board of whatever size
        declareWinner
        endTurn
            change currentTurn
            captureStones
                go through currentTurn's stone and capture ones that are fully surrounded
                add prisoner count of other player for each captured stone

    Player.Properties
        color
        score
        dragons
    Player.Methods
        placeStone //toggle
                    //if location has no stone Make new stone using player color and mouse position, Board.addStone(newStone)
                    //if location has stone of player.color, remove stone   PROBLEM - NEW STONE VS OLD STONES
        endTurn
        calculateScore
                has all linked stones
                recursive?
                are all the neighbors opposite color?

        getDragons
            go through the board array until you hit your first colored stone.
            give that stone an id of what dragon it is part of
            add that stone to dragon array
            find connected stones and give it the same id
            add stone to dragon array if it is not already there (check by x and y coordinates)

        hover // create transparent stone under mouse

    Board.Properties
        size: 
        stones: Array of stones 
    Board.Methods
        initializeStones //build out array according to size
        renderBoard (clears board first!)
        resizeBoard
        addStone(stone)  //add to array
        removeStone  //remove from array

    Stone.Properties
        x
        y
        color
    Stone.Methods
        renderStone

    Mouse.Properties
        x
        y

Events:

    Mousemove: currentTurn.hover
    OnClick: currentTurn.placeStone


for every stone
    add to a new dragon
    check neighbor
        if right color and does not exist in dragons add to dragon